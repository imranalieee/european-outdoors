import React from 'react';
import { useSelector } from 'react-redux';
import {
  Box, TableRow, TableCell, Stack
} from '@mui/material';

import { isEmpty } from 'lodash';
import moment from 'moment';
import Table from '../../../../../components/ag-grid-table';

import ProductImg from '../../../../../static/images/no-product-image.svg';

import { GetS3ImageUrl } from '../../../../../../utils/helpers';

import { PdfWrapper } from './style';
import { printHeaderPdf } from '../../../../../constants';

const handleImageError = (event, image) => {
  event.target.src = image;
};

const PrintableTable = React.forwardRef(({ data }, ref) => {
  const {
    user: { name = '' }
  } = useSelector((state) => state.auth);

  return (
    <PdfWrapper ref={ref} className="print-document-only">
      <Box className="pdf-viewer-custom">
        <Box display="flex" justifyContent="space-between">
          <Box component="span">
            <Box fontWeight={700} mb={2}>
              Pick Sheet Batch Id:
            </Box>
            <Box fontWeight={400}>{data?.batchPickId || '--'}</Box>
          </Box>
          <Box component="span">
            <Box fontWeight={700} mb={2}>
              Generated By:
            </Box>
            <Box fontWeight={400}>{data?.userName || name}</Box>
          </Box>
          <Box component="span">
            <Box fontWeight={700} mb={2}>
              Total Orders:
            </Box>
            <Box fontWeight={400}>{data?.totalOrders || '--ÃŸ'}</Box>
          </Box>
          <Box component="span">
            <Box fontWeight={700} mb={2}>
              Batch Date:
            </Box>
            <Box fontWeight={400}>{data?.printedAt ? moment(data?.printedAt).format('MM/DD/yyyy') : moment().format('MM/DD/yyyy')}</Box>
          </Box>
        </Box>
        <Box className="included-marketplace" display="flex" mb={3}>
          <Box>
            <Box
              component="span"
              width="100px"
              borderBottom="1px solid #000000"
              height="10px"
              display="inline-block"
              mr="10px"
            />
            <Box component="span" mr="10px" fontWeight="700">
              Included Marketplace:
            </Box>
          </Box>
          <Box className="platform-list">
            <ul>
              {data?.platforms?.map((doc) => (
                <li>{doc}</li>
              ))}
            </ul>
          </Box>
        </Box>
        <Table
          fixed
          alignCenter
          tableHeader={printHeaderPdf}
          height="auto"
          bodyPadding="8px 11px"
        >
          {data?.orderItemsData?.map((currentElem, index) => (
            <TableRow
              hover
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
            >
              <TableCell component="th" scope="row" width="70px">
                <Box component="span" display="flex" alignItems="center" gap={0.5}>
                  <Stack direction="row" spacing={1}>
                    <img
                      width={70}
                      height={70}
                      onError={(e) => handleImageError(e, ProductImg)}
                      src={!isEmpty(currentElem?.image) ? GetS3ImageUrl({
                        bucketName: 'productImage', key: currentElem?.image
                      }) : ProductImg}
                      // src={Product}
                      alt=""
                    />
                  </Stack>
                </Box>
              </TableCell>
              <TableCell width="35%">
                <Box>
                  <Box
                    component="span"
                    sx={{
                      textOverfow: 'auto',
                      whiteSpace: 'nowrap',
                      overflow: 'auto'
                    }}
                    maxWidth="200px"
                  >
                    <Box component="span" maxWidth="200px" whiteSpace="normal">
                      {currentElem?.title}
                    </Box>
                  </Box>
                  <Stack spacing={1} direction="row" fontSize="10px" mt={1.5}>
                    <Box component="span" color="#454545" fontWeight={700} maxWidth="200px">
                      ORDERS:
                      <Box component="span" color="#454545" ml={0.3} fontWeight={400} maxWidth="200px" whiteSpace="normal">
                        {(currentElem?.individualOrdersString || '--')}
                      </Box>
                    </Box>
                  </Stack>
                </Box>
              </TableCell>
              <TableCell><Box maxWidth="170px" whiteSpace="normal">{ currentElem?.sku}</Box></TableCell>
              <TableCell>{currentElem?.location}</TableCell>
              <TableCell>{currentElem?.qty}</TableCell>
            </TableRow>
          )) }

        </Table>
      </Box>
    </PdfWrapper>
  );
});

export default PrintableTable;
